[
	{	"pageTitle": "Index",
		"relativePagePath": "/{{ $.Site.Language}}/"
	},{{ $totalPage := newScratch }}{{ $totalPage.Add "pageCount" 1}}{{ $currentNode := . }}{{ $showvisitedlinks := .Site.Params.showVisitedLinks }}{{range .Site.Home.Sections.ByWeight}}{{ template "section-tree-nav1" dict "parent" .Parent "sect" .  "currentnode" $currentNode "showvisitedlinks" $showvisitedlinks "pageCount" 0 "totalPage" $totalPage}}{{end}}{{ define "section-tree-nav1" }}{{ $showvisitedlinks := .showvisitedlinks }}{{ $currentNode := .currentnode }}{{with .sect}}{{if .IsSection}}{{$pageCount := $.totalPage.Get "pageCount"}}{{$res := add 1 $pageCount}}{{$.totalPage.Set "pageCount" $res}}{{ $numberOfPages := (add (len .Pages) (len .Sections)) }}{{ if ne $numberOfPages 0 }}{{ $currentNode.Scratch.Set "pages" .Pages }}{{ if .Sections}}{{ $currentNode.Scratch.Set "pages" (.Pages | union .Sections) }}{{end}}{{ $pages := ($currentNode.Scratch.Get "pages") }}{{if eq .Site.Params.ordersectionsby "title"}}  {{ range $pages.ByTitle }}{{ if and .Params.hidden (not $.showhidden) }} {{else}}{{ template "section-tree-nav1" dict "sect" . "currentnode" $currentNode "showvisitedlinks" $showvisitedlinks "totalPage" $.totalPaget }}{{end}}{{ end }}{{else}}{{ range $pages.ByWeight }}{{ if and .Params.hidden (not $.showhidden) }} {{else}}{{ template "section-tree-nav1" dict "sect" . "currentnode" $currentNode "showvisitedlinks" $showvisitedlinks "totalPage" $.totalPage}}{{end}}{{ end }}{{end}}{{ end }}{{else}}{{ if not .Params.Hidden }}{{$pageCount := $.totalPage.Get "pageCount"}}{{$res := add 1 $pageCount}}{{$.totalPage.Set "pageCount" $res}}{{ end }}{{end}}{{ end }}{{ end }}{{ $totalPage2 := newScratch }}{{ $totalPage2.Add "pageCount" 1}}{{ $currentNode := . }}{{ $showvisitedlinks := .Site.Params.showVisitedLinks }}{{range .Site.Home.Sections.ByWeight}}{{ template "section-tree-nav2" dict "parent" .Parent "sect" .  "currentnode" $currentNode "showvisitedlinks" $showvisitedlinks "pageCount" 0 "totalPage" $totalPage "totalPage2" $totalPage2}}{{end}}]{{ define "section-tree-nav2" }}{{ $showvisitedlinks := .showvisitedlinks }}{{ $currentNode := .currentnode }}{{with .sect}}{{if .IsSection}}{{$pageCount := $.totalPage2.Get "pageCount"}}{{$res := add 1 $pageCount}}{{$.totalPage2.Set "pageCount" $res}}{{$maxPage := $.totalPage.Get "pageCount"}}
	{
		"pageTitle": "{{.Title}}",
		"relativePagePath": "{{.RelPermalink}}"
	}{{if ne $res $maxPage }},{{end}}{{ $numberOfPages := (add (len .Pages) (len .Sections)) }}{{ if ne $numberOfPages 0 }}{{ $currentNode.Scratch.Set "pages" .Pages }}{{ if .Sections}}{{ $currentNode.Scratch.Set "pages" (.Pages | union .Sections) }}{{end}}{{ $pages := ($currentNode.Scratch.Get "pages") }}{{if eq .Site.Params.ordersectionsby "title"}}  {{ range $pages.ByTitle }}{{ if and .Params.hidden (not $.showhidden) }} {{else}}{{ template "section-tree-nav2" dict "sect" . "currentnode" $currentNode "showvisitedlinks" $showvisitedlinks "totalPage" $.totalPage "totalPage2" $.totalPage2t }}{{end}}{{ end }}{{else}}{{ range $pages.ByWeight }}{{ if and .Params.hidden (not $.showhidden) }} {{else}}{{ template "section-tree-nav2" dict "sect" . "currentnode" $currentNode "showvisitedlinks" $showvisitedlinks "totalPage" $.totalPage "totalPage2" $.totalPage2}}{{end}}{{ end }}{{end}}{{ end }}{{else}}{{ if not .Params.Hidden }}{{$pageCount := $.totalPage2.Get "pageCount"}}{{$res := add 1 $pageCount}}{{$.totalPage2.Set "pageCount" $res}}{{$maxPage := $.totalPage.Get "pageCount"}}
	{
		"pageTitle": "{{.Title}}",
		"relativePagePath": "{{.RelPermalink}}"
	}{{if ne $res $maxPage }},{{end}}{{ end }}{{end}}{{ end }}{{ end }}